name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install clang-format
        run: sudo apt-get update && sudo apt-get install -y clang-format

      - name: Check for unformatted files
        run: |
          find lib/ src/ include/ -type f -name "*.c" -o -name "*.h" | xargs clang-format --dry-run --Werror
        shell: bash
  build:
    needs:
      - clang-format
    runs-on: ubuntu-latest

    strategy:
      matrix:
        distro: ["ubuntu", "debian"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker container
        run: |
          docker pull ${{ matrix.distro }}
          docker run -d --name build-container-${{ matrix.distro }} -v ${{ github.workspace }}:/workspace ${{ matrix.distro }} tail -f /dev/null

      - name: Install dependencies inside Docker
        run: |
          docker exec build-container-${{ matrix.distro }} bash -c "
          apt-get update &&
          apt-get install -y libbsd-dev build-essential
          "

      - name: Build project inside Docker
        run: |
          docker exec build-container-${{ matrix.distro }} bash -c "
          cd /workspace &&
          make all DISTRO=${{ matrix.distro }}
          "

      - name: Test project inside Docker
        run: |
          docker exec build-container-${{ matrix.distro }} bash -c "
          cd /workspace &&
          make tests DISTRO=${{ matrix.distro }}
          "

      - name: Clean up Docker container
        run: |
          docker stop build-container-${{ matrix.distro }} && docker rm build-container-${{ matrix.distro }}
